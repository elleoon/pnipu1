#include <iostream>
using namespace std;
int j;

struct Node {
    char data;
    Node* next;
};

struct Stack {
    Node* head = nullptr;
    int size = 0;
};

void push(Stack& stack, char a) {
    Node* new_node = new Node;
    new_node->data = a;
    new_node->next = stack.head;
    stack.head = new_node;
    stack.size++;
}
void pop(Stack& stack) {
    Node* delete_node = stack.head;
    stack.head = delete_node->next;
    delete delete_node;
    stack.size--;
    
}

void print(Stack& stack) {
    Node* current_node = stack.head;
    while (current_node != nullptr) {
        cout << current_node->data << " ";
        current_node = current_node->next;
    }
    cout << endl;
}
char top (Stack& stack){
    return stack.head->data;
}

int main() {
    setlocale(LC_ALL, "Rus");
    int n;
    Stack stack;
    char a;
    cout << "Введите кол-во элементов в стеке: ";
    cin >> n;
    cout << "Введите элементы в стеке: ";

    for (int i = 0; i < n; i++) {
        cin >> a;
        push(stack, a);
    }

    cout << "Стек: ";
    print(stack);

    char key;
    cout << "Введите, какой элемент нужно удалить: ";
    cin >> key;
    Stack stack1;
    for (int i = 0; i < n; i++) {
        if (top(stack) == key) {
            pop(stack);
            ::j++;
        }
        else {
            push(stack1, top(stack));
            pop(stack);
        }
    }
    for (int i = 0; i < n - j; i++) {
        push(stack, top(stack1));
        pop(stack1);
    }
    cout << "Стек после удаления: ";
    print(stack);
    int k;
    cout << "Введите, сколько элементов надо добавить в начало и конец стека: ";
    cin >> k;
    Stack stack2;
    char b;
    cout << "Введите элементы, которые хотите добавить: ";
    n = stack.size;
    for (int i = 0; i < n; i++) {
        push(stack1, top(stack));
        pop(stack);
    }
    

    for (int i = 0; i < k; i++) {
        cin >> b;
        push(stack2, b);
    }

    for (int i = 0; i < n; i++) {
        push(stack2, top(stack1));
        pop(stack1);
    }
    for (int i = 0; i < k; i++) {
        cin >> b;
        push(stack2, b);
    }

    cout << "Стек после добавления: ";
    print(stack2);
    return 0;
}
